#!/bin/bash

dopts="-p Î» -c -lr 4 -d 0.3 -nb \"#2F343F\" -sb \"#5294E2\" -fn \"Ubuntu Mono for Powerline-11\""

cachedir=${XDG_CACHE_HOME:-"$HOME/.cache"}
if [ -d "$cachedir" ]; then
    cache=$cachedir/dmenu_run
    historyfile=$cachedir/dmenu_history
else			# if no xdg dir, fall back to dotfiles in ~
    cache=$HOME/.dmenu_cache
    historyfile=$HOME/.dmenu_history
fi

IFS=:
if stest -dqr -n "$cache" $PATH; then
    stest -flx $PATH | grep -v "[" | sort -u > "$cache"
fi
unset IFS

case $1 in
    path)
        awk -v histfile=$historyfile '
	BEGIN {
		while( (getline < histfile) > 0 ) {
			sub("^[0-9]+\t","")
			print
			x[$0]=1
		}
	} !x[$0]++ ' "$cache" \
	    | eval dmenu ${dopts} -sb \"#E84A5F\" \
	    | awk -v histfile=$historyfile '
		BEGIN {
			FS=OFS="\t"
			while ( (getline < histfile) > 0 ) {
				count=$1
				sub("^[0-9]+\t","")
				fname=$0
				history[fname]=count
			}
			close(histfile)
		}

		{
			history[$0]++
			print
		}

		END {
			if(!NR) exit
			for (f in history)
				print history[f],f | "sort -t '\t' -k1rn >" histfile
		}
	' \
	    | while read cmd; do ${SHELL:-"/bin/sh"} -c "$cmd" & done
        # eval dmenu_run ${dopts} -sb \"#E84A5F\"
        ;;
    files)
        home_cache=/tmp/home.cache
        if [ ! -f ${home_cache} ]; then
            find $HOME -type f ! \( -regex '.*/\(.Maildir\|.cache\|.dropbox-dist\|.*.fold\|__pycache__\|.emacs.d/tmp\)/.*?$' -prune \) > ${home_cache}
        fi
        file=$(cat ${home_cache} | eval dmenu ${dopts} -l 10 -lr 2)
        if [ ! -z ${file} ]; then
            xdg-open $file &
            if [ $? -ne 0 ]; then
                nautilus $(basename $file) &
            fi
        fi
        ;;
    *)
        notify-send -u critical -t 5000 "dmenu" "Missing paremeter!"
esac
